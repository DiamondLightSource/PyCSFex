"""Mostly from NIST at https://physics.nist.gov/cuu/Constants/index.html"""import math  # for numerical constants#kg_per_amu = 1.66053906660e-27kg_per_amu_unc = 3e-10 * kg_per_amu#h_Js = 6.62607015e-34   # definition - exact according to NISThbar_Js = h_Js/math.pi/2.#re_A = 2.8179403262e-5re_A_unc = re_A * 4.5e-10#electron_charge_C = 1.602176634e-19   # definition - exact according to NISTc_m_per_s = 299792458.   # definition - exact according to NIST#kB_J_per_K = 1.380649e-23kB_eV_per_K = kB_J_per_K / electron_charge_C#hc_keV_A = 1e7*h_Js * c_m_per_s / electron_charge_C   #12.3984198433200## Constants used only by xrpy package. Updated using 2018 CODATA values unless otherwise stated.au = 2.80022e+7 # not updatedkevPerRyd = 0.027211386finePi = 6.942325 # not updatedinvFineStruct = 137.035999084inv4PiSqr = 0.0063325740barns2Elec = 1.43110541e-8 # not updatedfpp2mu = 4208.0319516  # See notes in mucal.pyAnomal = 0  # global for anomal.py default to cromerfp2refr = 415.17911934     # convert fp, fpp to alpha, beta#def print_constants() :    print("kg_per_amu = ",kg_per_amu," +- ",kg_per_amu_unc)    print("h_Js = ",h_Js,"   hbar_Js = ",hbar_Js)    print("re_A = ",re_A," +- ",re_A_unc)    print("c_m_per_s = ",c_m_per_s)    print("kB_J_per_K = ",kB_J_per_K,"   kB_eV_per_K = ",kB_eV_per_K)    print("hc_keV_A = ",hc_keV_A)    print("xrpy au = ",au)    print("xrpy kevPerRyd = ",kevPerRyd)    print("xrpy finePi = ",finePi)    print("xrpy invFineStruct = ",invFineStruct)    print("xrpy barns2Elec = ",barns2Elec)    print("xrpy fpp2mu = ",fpp2mu)    print("xrpy Anomal = ",Anomal)    print("xrpy fp2refr = ",fp2refr)#print_constants()